<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:local="clr-namespace:Neptun">

	<MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter" />

	<Style x:Key="MenuScrollButton" BasedOn="{x:Null}" TargetType="{x:Type RepeatButton}">
		<Setter Property="ClickMode" Value="Hover"/>
		<Setter Property="MinWidth" Value="0"/>
		<Setter Property="MinHeight" Value="0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<DockPanel Background="Transparent" SnapsToDevicePixels="true">
						<Rectangle x:Name="R1" DockPanel.Dock="Right" Fill="Transparent" Width="1"/>
						<Rectangle x:Name="B1" DockPanel.Dock="Bottom" Fill="Transparent" Height="1"/>
						<Rectangle x:Name="L1" DockPanel.Dock="Left" Fill="Transparent" Width="1"/>
						<Rectangle x:Name="T1" DockPanel.Dock="Top" Fill="Transparent" Height="1"/>
						<ContentPresenter x:Name="ContentContainer" HorizontalAlignment="Center" Margin="2,2,2,2" VerticalAlignment="Center"/>
					</DockPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="IsPressed" Value="true">
							<Setter Property="Fill" TargetName="R1" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
							<Setter Property="Fill" TargetName="B1" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
							<Setter Property="Fill" TargetName="L1" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
							<Setter Property="Fill" TargetName="T1" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
							<Setter Property="Margin" TargetName="ContentContainer" Value="3,3,1,1"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="MenuScrollViewer"
       TargetType="{x:Type ScrollViewer}"
       BasedOn="{x:Null}">
		<Setter Property="HorizontalScrollBarVisibility"
          Value="Hidden" />
		<Setter Property="VerticalScrollBarVisibility"
          Value="Auto" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollViewer}">
					<Grid SnapsToDevicePixels="True">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="*" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<Border Grid.Row="0"
                  Grid.Column="0">
							<ScrollContentPresenter Margin="3" />
						</Border>

						<RepeatButton Style="{StaticResource MenuScrollButton}"
                        Grid.Row="2"
                        Grid.Column="0"
                        Command="{x:Static ScrollBar.LineDownCommand}"
                        CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                        Focusable="False">
							<RepeatButton.Visibility>
								<MultiBinding FallbackValue="Visibility.Collapsed"
                            Converter="{StaticResource MenuScrollingVisibilityConverter}"
                            ConverterParameter="100">
									<Binding RelativeSource="{RelativeSource TemplatedParent}"
                         Path="ComputedVerticalScrollBarVisibility" />
									<Binding RelativeSource="{RelativeSource TemplatedParent}"
                         Path="VerticalOffset" />
									<Binding RelativeSource="{RelativeSource TemplatedParent}"
                         Path="ExtentHeight" />
									<Binding RelativeSource="{RelativeSource TemplatedParent}"
                         Path="ViewportHeight" />
								</MultiBinding>
							</RepeatButton.Visibility>
							<Path Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
						</RepeatButton>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="{x:Static MenuItem.SeparatorStyleKey}"
       TargetType="{x:Type Separator}">
		<Setter Property="Height"
          Value="1" />
		<Setter Property="Margin"
          Value="0,0,0,0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Separator}">
					<Border BorderThickness="2">
						<Border.BorderBrush>
							<SolidColorBrush Color="{StaticResource WordDarkBlueBrush}" />
						</Border.BorderBrush>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- TopLevelHeader -->
	<ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}"
                 TargetType="{x:Type MenuItem}">
		<Border x:Name="Border" CornerRadius="7">
			<Grid>
				<!--Main Titles-->
				<ContentPresenter Margin="20,0,20,0"
                        ContentSource="Header"
                        RecognizesAccessKey="True" />
				<Popup x:Name="Popup"
             Placement="Bottom"
             IsOpen="{TemplateBinding IsSubmenuOpen}"
             AllowsTransparency="True"
             Focusable="False"
             PopupAnimation="Fade">
					<!--Inner Border-->
					<Border x:Name="SubmenuBorder"
					SnapsToDevicePixels="True"
					Padding="10,10,10,10"
					BorderThickness="1"
					CornerRadius="10"
					Background="{StaticResource WordDarkBlueBrush}">
						<Border.BorderBrush>
							<SolidColorBrush Color="{StaticResource WordBlack}" />
						</Border.BorderBrush>
						<StackPanel IsItemsHost="True"
							KeyboardNavigation.DirectionalNavigation="Cycle" />
					</Border>
				</Popup>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsSuspendingPopupAnimation"
             Value="true">
				<Setter TargetName="Popup"
              Property="PopupAnimation"
              Value="None" />
			</Trigger>
			<Trigger Property="IsHighlighted"
             Value="true">
				<Setter TargetName="Border"
              Property="BorderBrush"
              Value="Transparent" />
				<Setter Property="Background"
              TargetName="Border" Value="{StaticResource WordLightBlueBrush}"/>
			</Trigger>

			<Trigger Property="IsEnabled"
             Value="False">
				<Setter Property="Foreground">
					<Setter.Value>
						<SolidColorBrush Color="{StaticResource DisabledForegroundColor}" />
					</Setter.Value>
				</Setter>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!-- TopLevelItem -->
	<ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}"
                 TargetType="{x:Type MenuItem}">
		<Border Padding="10" x:Name="Border">
			<Grid>
				<!--TextBlock.FontSize="80"
								  TextBlock.FontWeight="UltraBlack"
								  TextBlock.FontFamily="{StaticResource LatoBold}"-->
				<!--<TextBlock FontSize="80" FontWeight="ExtraBlack" Text="{Binding Header}"/>-->
				<ContentPresenter Margin="0,3,0,3"
								  HorizontalAlignment="Center"
								  VerticalAlignment="Center"
                        ContentSource="Header"
                        RecognizesAccessKey="True" />
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsHighlighted"
             Value="true">
				<Setter Property="Background"
					TargetName="Border"
					Value="{StaticResource WordDarkBlueBrush}">
				</Setter>
				<Setter Property="CornerRadius"
              TargetName="Border" Value="20"/>
			</Trigger>
			<Trigger Property="IsEnabled"
             Value="False">
				<Setter Property="Foreground">
					<Setter.Value>
						<SolidColorBrush Color="{StaticResource DisabledForegroundColor}" />
					</Setter.Value>
				</Setter>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!-- SubmenuItem -->
	<ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}"
                 TargetType="{x:Type MenuItem}">
		<Border x:Name="Border" Background="{StaticResource WordLightBlueBrush}" CornerRadius="4"
          BorderThickness="1">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="Auto"
                          SharedSizeGroup="Shortcut" />
					<ColumnDefinition Width="13" />
				</Grid.ColumnDefinitions>

				<Border x:Name="Check"
              Width="13"
              Height="13"
              Visibility="Collapsed"
              Margin="6,0,6,0"
				Padding="300"
              BorderThickness="1">

				</Border>
				<ContentPresenter x:Name="HeaderHost"
                        Grid.Column="1"
                        ContentSource="Header"
						Margin="5"
                        RecognizesAccessKey="True" />
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="ButtonBase.Command"
             Value="{x:Null}" />

			<Trigger Property="IsCheckable"
             Value="true">
				<Setter TargetName="Check"
              Property="Visibility"
              Value="Visible" />
			</Trigger>
			<Trigger Property="IsHighlighted"
             Value="true">
				<Setter Property="Background"
              TargetName="Border" Value="{StaticResource WordDarkBlueBrush}">
				</Setter>
				<Setter Property="BorderBrush"
              TargetName="Border">
					<Setter.Value>
						<LinearGradientBrush EndPoint="0.5,1"
                               StartPoint="0.5,0">
							<GradientStop Color="{StaticResource WordDarkBlue}"
                          Offset="0" />
							<GradientStop Color="Transparent"
                          Offset="1" />
						</LinearGradientBrush>
					</Setter.Value>
				</Setter>
			</Trigger>
			<Trigger Property="IsEnabled"
             Value="false">
				<Setter Property="Foreground">
					<Setter.Value>
						<SolidColorBrush Color="{StaticResource DisabledForegroundColor}" />
					</Setter.Value>
				</Setter>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}"
                 TargetType="{x:Type MenuItem}">
		<Border x:Name="Border"
          BorderThickness="1">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto"
                          SharedSizeGroup="Icon" />
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="Auto"
                          SharedSizeGroup="Shortcut" />
					<ColumnDefinition Width="13" />
				</Grid.ColumnDefinitions>

				<ContentPresenter x:Name="HeaderHost"
                        Grid.ColumnSpan="3"
                        ContentSource="Header"
                        RecognizesAccessKey="True" />
				<Popup x:Name="Popup"
             Placement="Right"
             HorizontalOffset="-4"
             IsOpen="{TemplateBinding IsSubmenuOpen}"
             AllowsTransparency="True"
             Focusable="False"
             PopupAnimation="Fade">
					<Border x:Name="SubmenuBorder"
                SnapsToDevicePixels="True"
                Background="{DynamicResource MenuPopupBrush}"
                BorderThickness="1">
						<Border.BorderBrush>
							<SolidColorBrush
								Color="{StaticResource WordDarkBlueBrush}" />
						</Border.BorderBrush>
						<ScrollViewer CanContentScroll="True"
                        Style="{StaticResource MenuScrollViewer}">
							<StackPanel IsItemsHost="True"
                        KeyboardNavigation.DirectionalNavigation="Cycle" />
						</ScrollViewer>
					</Border>
				</Popup>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>

			<Trigger Property="IsHighlighted"
             Value="true">
				<Setter Property="Background"
					TargetName="Border"
					Value="{StaticResource WordDarkBlueBrush}">
				</Setter>
				<Setter Property="BorderBrush"
					TargetName="Border"
					Value="{StaticResource WordDarkBlueBrush}">
				</Setter>
			</Trigger>
			<Trigger SourceName="Popup"
             Property="AllowsTransparency"
             Value="True">
				<Setter TargetName="SubmenuBorder"
              Property="CornerRadius"
              Value="5" />
				<Setter TargetName="SubmenuBorder"
              Property="Padding"
              Value="0,3,0,3" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!-- MenuItem Style -->
	<Style x:Key="{x:Type MenuItem}"
       TargetType="{x:Type MenuItem}">
		<Setter Property="OverridesDefaultStyle"
          Value="True" />
		<Style.Triggers>
			<Trigger Property="Role"
             Value="TopLevelHeader">
				<Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}" />
				<Setter Property="Grid.IsSharedSizeScope"
              Value="true" />
			</Trigger>
			<Trigger Property="Role"
             Value="TopLevelItem">
				<Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}" />
			</Trigger>
			<Trigger Property="Role"
             Value="SubmenuHeader">
				<Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}" />
			</Trigger>
			<Trigger Property="Role"
             Value="SubmenuItem">
				<Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}" />
			</Trigger>
		</Style.Triggers>
	</Style>

</ResourceDictionary>